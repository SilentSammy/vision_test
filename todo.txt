+ Test with octagon and square
+ Function to get camera matrix
+ Use arucos as well in pose_estimation_demo
+ smooth car control
+ allow detection of rising and falling edges in keybrd.py
+ Move ordering of points to the find_quadrilateral function
- Find out why panning the camera changes the circle's distance with both approaches, and the aruco's distance with the ref_size approach
- Make everything in radians (ugh). Apparently fov for pose estimation is expected to be in radians? But only when using ref_size? Investigate.

Pollitos
+ Understand and standarize quad array format
- Match nearby corners
- Find 8 neighbors of a tile
- id tile based on pattern
- use id to determine camera pose